{"title":"Entity Framework实现具体业务功能","uid":"cefa2fc37006a5e3cbed334f7a0a3e71","slug":"Entity Framework实现具体业务功能","date":"2025-07-29T09:26:07.000Z","updated":"2025-07-29T09:59:57.073Z","comments":true,"path":"api/articles/Entity Framework实现具体业务功能.json","keywords":null,"cover":null,"content":"<p>下面是一个 <strong>WinForms + Entity Framework（EF）实现具体业务功能</strong> 的完整参考，包括：</p>\n<ul>\n<li>🔹 数据绑定到 <code>DataGridView</code></li>\n<li>🔹 使用 EF 进行查询</li>\n<li>🔹 批量操作（例如删除、修改）</li>\n<li>🔹 控件交互（复选框列、按钮列）</li>\n</ul>\n<p>🧩 示例背景：数据库中有一张 <code>Volunteer</code> 表结构如下：</p>\n<h2 id=\"🧩-示例背景：数据库中有一张-Volunteer-表结构如下：\"><a href=\"#🧩-示例背景：数据库中有一张-Volunteer-表结构如下：\" class=\"headerlink\" title=\"🧩 示例背景：数据库中有一张 Volunteer 表结构如下：\"></a>🧩 示例背景：数据库中有一张 <code>Volunteer</code> 表结构如下：</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">Volunteer</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> Id &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">int</span>? Age &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Phone &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"built_in\">bool</span> IsEnabled &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>EF <code>DbContext</code> 示例：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title\">AppDbContext</span> : <span class=\"title\">DbContext</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> DbSet&lt;Volunteer&gt; Volunteers &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"✅-一、EF-查询并绑定到-DataGridView\"><a href=\"#✅-一、EF-查询并绑定到-DataGridView\" class=\"headerlink\" title=\"✅ 一、EF 查询并绑定到 DataGridView\"></a>✅ 一、EF 查询并绑定到 DataGridView</h1><h2 id=\"1-封装构造DataGridViewTextColumn的方法\"><a href=\"#1-封装构造DataGridViewTextColumn的方法\" class=\"headerlink\" title=\"1. 封装构造DataGridViewTextColumn的方法\"></a>1. 封装构造DataGridViewTextColumn的方法</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> DataGridViewTextColumn <span class=\"title\">buildDataGridViewTextColumn</span>(<span class=\"params\"><span class=\"built_in\">string</span> name,<span class=\"built_in\">string</span> headerText,<span class=\"built_in\">string</span> dataPropertyName,<span class=\"built_in\">bool</span>? visible = <span class=\"literal\">false</span></span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> DataGridViewTextColumn&#123;</span><br><span class=\"line\">\t\tName = name,</span><br><span class=\"line\">\t\tHeaderText = headerText,</span><br><span class=\"line\">\t\tDataPropertyName = dataPropertyName,</span><br><span class=\"line\">\t\tVisible = visible</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-初始化DataGridView数据源\"><a href=\"#2-初始化DataGridView数据源\" class=\"headerlink\" title=\"2. 初始化DataGridView数据源\"></a>2. 初始化DataGridView数据源</h2><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">loadData</span>()</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">using</span>(DB_DeskTop context = <span class=\"keyword\">new</span> DB_DeskTop())&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">var</span> result= context.Volunteers.Select(v =&gt; <span class=\"keyword\">new</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\tid = v.id,</span><br><span class=\"line\">\t\t\t\t\t\t\tname = v.name,</span><br><span class=\"line\">\t\t\t\t\t\t\tage = v.age,</span><br><span class=\"line\">\t\t\t\t\t\t\tphone = v.phone,</span><br><span class=\"line\">\t\t\t\t\t\t\tenable = v.isEnable == <span class=\"number\">1</span> ? <span class=\"string\">&quot;启用&quot;</span> : <span class=\"string\">&quot;未启用&quot;</span></span><br><span class=\"line\">\t\t\t\t\t&#125;).ToList();</span><br><span class=\"line\">\t\t\t\t\tdatagridview1.DataSource = result;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">catch</span>(Exception ex)&#123;</span><br><span class=\"line\">\t\t\tMessageBox.Show(<span class=\"string\">$&quot;error info:<span class=\"subst\">&#123;ex.Message&#125;</span>&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","feature":true,"text":"下面是一个 WinForms + Entity Framework（EF）实现具体业务功能 的完整参考，包括： 🔹 数据绑定到 DataGridView 🔹 使...","permalink":"/post/Entity Framework实现具体业务功能","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"Entity Framework","slug":"Entity-Framework","count":3,"path":"api/tags/Entity-Framework.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%F0%9F%A7%A9-%E7%A4%BA%E4%BE%8B%E8%83%8C%E6%99%AF%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%AD%E6%9C%89%E4%B8%80%E5%BC%A0-Volunteer-%E8%A1%A8%E7%BB%93%E6%9E%84%E5%A6%82%E4%B8%8B%EF%BC%9A\"><span class=\"toc-text\">🧩 示例背景：数据库中有一张 Volunteer 表结构如下：</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E2%9C%85-%E4%B8%80%E3%80%81EF-%E6%9F%A5%E8%AF%A2%E5%B9%B6%E7%BB%91%E5%AE%9A%E5%88%B0-DataGridView\"><span class=\"toc-text\">✅ 一、EF 查询并绑定到 DataGridView</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%B0%81%E8%A3%85%E6%9E%84%E9%80%A0DataGridViewTextColumn%E7%9A%84%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">1. 封装构造DataGridViewTextColumn的方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%88%9D%E5%A7%8B%E5%8C%96DataGridView%E6%95%B0%E6%8D%AE%E6%BA%90\"><span class=\"toc-text\">2. 初始化DataGridView数据源</span></a></li></ol>","author":{"name":"Felix Still","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"Documenting my journey in Android native and WinForms development. Tutorials, experiments, and practical coding experiences.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Android native commonly used controls","uid":"167f39d53da8da1b52c7941440e351aa","slug":"Android native commonly used controls","date":"2025-07-29T18:47:07.000Z","updated":"2025-07-29T18:51:38.815Z","comments":true,"path":"api/articles/Android native commonly used controls.json","keywords":null,"cover":null,"text":"📘 Android 原生常用控件与 Java 示例代码🧩 基础布局类控件 控件 描述 LinearLayout 线性布局，子元素水平或垂直排列 Relative...","permalink":"/post/Android native commonly used controls","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"Android native","slug":"Android-native","count":1,"path":"api/tags/Android-native.json"}],"author":{"name":"Felix Still","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"Documenting my journey in Android native and WinForms development. Tutorials, experiments, and practical coding experiences.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"DataGridView常用操作","uid":"cc26a2e6e1a0489e6526665c276705dd","slug":"DataGridView常用操作","date":"2025-07-29T09:26:07.000Z","updated":"2025-07-29T09:30:18.760Z","comments":true,"path":"api/articles/DataGridView常用操作.json","keywords":null,"cover":null,"text":"一、动态添加列 前置准备：清空旧列（可选） 1datagridview1.Columns.Clear(); 动态添加各种列 添加文本列（DataGridView...","permalink":"/post/DataGridView常用操作","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"Winform","slug":"Winform","count":1,"path":"api/tags/Winform.json"}],"author":{"name":"Felix Still","slug":"blog-author","avatar":"/images/avatar.jpg","link":"/","description":"Documenting my journey in Android native and WinForms development. Tutorials, experiments, and practical coding experiences.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}